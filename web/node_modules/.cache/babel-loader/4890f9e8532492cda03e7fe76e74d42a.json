{"ast":null,"code":"import _slicedToArray from \"/Users/inhyukna/gits/irnet/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/inhyukna/gits/irnet/web/src/AttentionViewer.js\";\nimport React, { Component } from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport './App.css';\nimport 'react-bootstrap-table/css/react-bootstrap-table.css';\n\nclass AttentionViewer extends Component {\n  render() {\n    const question_headers = [];\n\n    for (const _ref of this.props.question.entries()) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      const index = _ref2[0];\n      const value = _ref2[1];\n      question_headers.push(React.createElement(TableHeaderColumn, {\n        row: \"1\",\n        dataField: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, value));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(BootstrapTable, {\n      data: this.props.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(TableHeaderColumn, {\n      row: \"0\",\n      rowSpan: \"2\",\n      dataField: \"rule\",\n      style: {\n        'width': '60px'\n      },\n      isKey: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Rules\"), React.createElement(TableHeaderColumn, {\n      row: \"0\",\n      colSpan: this.props.question.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Attention\"), question_headers));\n  }\n\n}\n\nexport default AttentionViewer;","map":{"version":3,"sources":["/Users/inhyukna/gits/irnet/web/src/AttentionViewer.js"],"names":["React","Component","BootstrapTable","TableHeaderColumn","AttentionViewer","render","question_headers","props","question","entries","index","value","push","data","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,cAAR,EACOC,iBADP,QAC+B,uBAD/B;AAEA,OAAO,WAAP;AACA,OAAO,qDAAP;;AAGA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACtCI,EAAAA,MAAM,GAAG;AACP,UAAMC,gBAAgB,GAAG,EAAzB;;AACA,uBAA6B,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,OAApB,EAA7B,EAA4D;AAAA;;AAAA,YAAhDC,KAAgD;AAAA,YAAzCC,KAAyC;AAC1DL,MAAAA,gBAAgB,CAACM,IAAjB,CAAsB,oBAAC,iBAAD;AAAmB,QAAA,GAAG,EAAC,GAAvB;AAA2B,QAAA,SAAS,EAAEF,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+CC,KAA/C,CAAtB;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWM,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAmB,MAAA,GAAG,EAAC,GAAvB;AAA2B,MAAA,OAAO,EAAC,GAAnC;AAAuC,MAAA,SAAS,EAAC,MAAjD;AAAwD,MAAA,KAAK,EAAE;AAAC,iBAAS;AAAV,OAA/D;AAAiF,MAAA,KAAK,MAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIE,oBAAC,iBAAD;AAAmB,MAAA,GAAG,EAAC,GAAvB;AAA2B,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWC,QAAX,CAAoBM,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAOGR,gBAPH,CADF,CADF;AAaD;;AAnBqC;;AAsBxC,eAAeF,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport {BootstrapTable, \n       TableHeaderColumn} from 'react-bootstrap-table';\nimport './App.css';\nimport 'react-bootstrap-table/css/react-bootstrap-table.css'\n \n \nclass AttentionViewer extends Component {\n  render() {\n    const question_headers = []\n    for (const [index, value] of this.props.question.entries()) {\n      question_headers.push(<TableHeaderColumn row='1' dataField={index} >{value}</TableHeaderColumn>)\n    }\n    return (\n      <div>\n        <BootstrapTable data={this.props.data}>\n          <TableHeaderColumn row='0' rowSpan='2' dataField='rule' style={{'width': '60px'}}isKey>\n            Rules\n          </TableHeaderColumn>\n          <TableHeaderColumn row='0' colSpan={this.props.question.length}>\n            Attention\n          </TableHeaderColumn>\n          {question_headers}\n        </BootstrapTable>\n      </div>\n    );\n  }\n}\n \nexport default AttentionViewer;"]},"metadata":{},"sourceType":"module"}